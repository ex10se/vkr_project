{"version":3,"sources":["./src/app/profile/edit/edit.component.scss","./src/app/profile/edit/edit.component.ts","./src/app/profile/edit/edit.component.html","./src/app/profile/profile.module.ts"],"names":[],"mappings":"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","file":"profile-profile-module-1ade76e0c295f5e228d2.js","sourcesContent":["export default \"mat-form-field {\\n  width: 300px;\\n}\\n\\n.form-control:focus {\\n  background-color: #d1d4ff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxlZGl0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7QUFDRiIsImZpbGUiOiJlZGl0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAzMDBweDtcclxufVxyXG5cclxuLmZvcm0tY29udHJvbDpmb2N1cyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2QxZDRmZjtcclxuXHJcbn1cclxuIl19 */\";","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../api.service';\nimport {LoginService} from '../../login.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss']\n})\nexport class EditComponent implements OnInit {\n\n  isAuth = false;\n  userId = 0;\n  formSubmitted = false;\n  form: any = new FormGroup({\n    firstName: new FormControl(),\n    phone: new FormControl(),\n    address: new FormControl()\n  });\n\n  constructor(private apiService: ApiService,\n              private loginService: LoginService) {\n\n    this.loginService.isAuth$.subscribe((res: any) => {\n      this.isAuth = res;\n      if (this.isAuth) {\n        this.apiService.init().subscribe((data: any) => {\n          this.userId = data.user.id;\n          this.fillForm(data.user.first_name, data.user.phone, data.user.address);\n        });\n      }\n    });\n  }\n\n  fillForm(fName: string, phn: string, addr: string): void {\n    this.form = new FormGroup({\n      firstName: new FormControl(fName, {\n        validators: [\n          Validators.required,\n          Validators.minLength(2)\n        ]\n      }),\n      phone: new FormControl(phn, {\n        validators: [\n          Validators.required,\n          Validators.minLength(7)]\n      }),\n      address: new FormControl(addr, {\n        validators: [\n          Validators.required,\n          Validators.minLength(6)]\n      })\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    this.formSubmitted = true;\n    this.apiService.changeUserProfile(this.userId, this.form.get('firstName').value, this.form.get('phone').value,\n      this.form.get('address').value).subscribe(() => {\n    });\n  }\n}\n","export default \"<div id=\\\"app-center\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n  <ng-container *ngIf=\\\"!isAuth\\\"><h1>Вам необходимо авторизоваться</h1></ng-container>\\n\\n  <ng-container *ngIf=\\\"isAuth\\\">\\n\\n    <ng-container *ngIf=\\\"formSubmitted\\\"><h1>Профиль сохранен</h1></ng-container>\\n    <ng-container *ngIf=\\\"!formSubmitted\\\"><h1>Профиль</h1></ng-container>\\n    <br>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" gdAuto=\\\"row dense\\\" gdGap=\\\"10px\\\">\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <mat-label>Имя</mat-label>\\n        <input matInput type=\\\"text\\\" [formControl]=\\\"form.get('firstName')\\\" placeholder=\\\"Имя\\\"\\n               id=\\\"first-name\\\" name=\\\"first-name\\\" required>\\n        <mat-error *ngIf=\\\"form.get('firstName').invalid\\\">Пожалуйста, введите имя</mat-error>\\n      </mat-form-field>\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <mat-label>Телефон</mat-label>\\n        <input matInput type=\\\"tel\\\" [formControl]=\\\"form.get('phone')\\\"\\n               placeholder=\\\"Телефон\\\" id=\\\"phone\\\" name=\\\"phone\\\" required>\\n        <mat-error *ngIf=\\\"form.get('phone').invalid\\\">Пожалуйста, введите верный номер телефона</mat-error>\\n      </mat-form-field>\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <mat-label>Адрес доставки</mat-label>\\n        <textarea matInput [matTextareaAutosize]=true [formControl]=\\\"form.get('address')\\\" placeholder=\\\"Адрес\\\"\\n                  id=\\\"address\\\" name=\\\"address\\\" required></textarea>\\n        <mat-error *ngIf=\\\"form.get('address').invalid\\\">Пожалуйста, введите адрес</mat-error>\\n      </mat-form-field>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!form.valid || !form.touched\\\">Сохранить</button>\\n    </form>\\n  </ng-container>\\n</div>\\n\\n\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {EditComponent} from './edit/edit.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\n\nconst routes: Routes = [\n  {path: '', component: EditComponent}\n];\n\n@NgModule({\n  declarations: [EditComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        FlexLayoutModule,\n        FormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        ReactiveFormsModule\n    ]\n})\nexport class ProfileModule {\n}\n"],"sourceRoot":"webpack:///"}